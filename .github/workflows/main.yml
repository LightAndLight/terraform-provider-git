name: Release

on:
  push:
    branches:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get branch
      id: get_branch
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/heads\//}
    - name: Build linux amd64
      id: build_exe
      env:
        EXE_NAME: terraform-provider-git-${{ steps.get_version.outputs.VERSION }}
      run: |
        GOOS=linux GOARCH=amd64 go build -o "$EXE_NAME" src/*
        echo ::set-output name=exe_name::"$EXE_NAME"
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_branch.outputs.VERSION }}
        release_name: ${{ steps.get_branch.outputs.VERSION }}
        body: Test release
        draft: false
        prerelease: false
    - name: Upload linux amd64
      id: upload_linux_amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./${{steps.build_exe.outputs.exe_name }}
        asset_name: ${{steps.build_exe.outputs.exe_name }}
        asset_content_type: application/octet-stream
